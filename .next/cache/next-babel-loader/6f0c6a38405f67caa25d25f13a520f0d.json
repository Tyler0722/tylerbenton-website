{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { ELEMENT, SIZE, WEIGHT } from \"./constants\"; // 10, 30, 60\n// 12 (smallest) (1.3), small 14 (1.6), 18 (normal) (1.6), 20 (large) (1.6), 24 (larger) (1.6), 28 (largest) (1.6)\n\nconst getSize = ({\n  size\n}) => ({\n  [SIZE.SMALLEST]: \"1.2rem\",\n  [SIZE.SMALL]: \"1.4rem\",\n  [SIZE.NORMAL]: \"1.8rem\",\n  [SIZE.LARGE]: \"2rem\",\n  [SIZE.LARGER]: \"2.4rem\",\n  [SIZE.LARGEST]: \"2.8rem\"\n})[size];\n\nconst getTextAlign = ({\n  align\n}) => align;\n\nconst getLineHeight = ({\n  size\n}) => size === SIZE.SMALLEST ? 1.3 : 1.6;\n\nconst getFontWeight = ({\n  weight\n}) => ({\n  [WEIGHT.NORMAL]: 400,\n  [WEIGHT.MEDIUM]: 500,\n  [WEIGHT.BOLD]: 700,\n  [WEIGHT.EXTRABOLD]: 800\n})[weight];\n\nconst getColor = ({\n  color\n}) => ({\n  gray: \"#828282\",\n  darkGray: \"#4A4A4A\",\n  veryDarkGray: \"#303030\",\n  black: \"#000\"\n})[color];\n\nconst StyledText = styled(({\n  element: Component,\n  className,\n  children\n}) => __jsx(Component, {\n  className: className\n}, children)).withConfig({\n  displayName: \"Text__StyledText\",\n  componentId: \"sc-14psc8m-0\"\n})([\"text-align:\", \";font-size:\", \";line-height:\", \";color:\", \";margin-bottom:\", \"px;margin-top:\", \"px;font-weight:\", \";\"], getTextAlign, getSize, getLineHeight, getColor, ({\n  spaceAfter\n}) => spaceAfter, ({\n  spaceBefore\n}) => spaceBefore, getFontWeight);\n\nconst Text = ({\n  element = ELEMENT.P,\n  className,\n  children,\n  color,\n  size = SIZE.NORMAL,\n  weight = WEIGHT.NORMAL,\n  align,\n  uppercase = false,\n  italic = false,\n  spaceBefore = 0,\n  spaceAfter = 0\n}) => __jsx(StyledText, {\n  element: element,\n  align: align,\n  className: className,\n  color: color,\n  size: size,\n  weight: weight,\n  italic: italic,\n  uppercase: uppercase,\n  spaceBefore: spaceBefore,\n  spaceAfter: spaceAfter\n}, children);\n\nText.propTypes = {\n  element: PropTypes.oneOf([ELEMENT.DIV, ELEMENT.P, ELEMENT.SPAN]),\n  size: PropTypes.oneOf([SIZE.SMALLEST, SIZE.SMALL, SIZE.NORMAL, SIZE.LARGE, SIZE.LARGER, SIZE.LARGEST])\n};\nexport default Text;","map":{"version":3,"sources":["/home/tyler/Documents/tylerbenton/components/Text/index.js"],"names":["React","PropTypes","styled","ELEMENT","SIZE","WEIGHT","getSize","size","SMALLEST","SMALL","NORMAL","LARGE","LARGER","LARGEST","getTextAlign","align","getLineHeight","getFontWeight","weight","MEDIUM","BOLD","EXTRABOLD","getColor","color","gray","darkGray","veryDarkGray","black","StyledText","element","Component","className","children","spaceAfter","spaceBefore","Text","P","uppercase","italic","propTypes","oneOf","DIV","SPAN"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport { ELEMENT, SIZE, WEIGHT } from \"./constants\";\n\n// 10, 30, 60\n// 12 (smallest) (1.3), small 14 (1.6), 18 (normal) (1.6), 20 (large) (1.6), 24 (larger) (1.6), 28 (largest) (1.6)\n\nconst getSize = ({ size }) =>\n  ({\n    [SIZE.SMALLEST]: \"1.2rem\",\n    [SIZE.SMALL]: \"1.4rem\",\n    [SIZE.NORMAL]: \"1.8rem\",\n    [SIZE.LARGE]: \"2rem\",\n    [SIZE.LARGER]: \"2.4rem\",\n    [SIZE.LARGEST]: \"2.8rem\"\n  }[size]);\n\nconst getTextAlign = ({ align }) => align;\n\nconst getLineHeight = ({ size }) => (size === SIZE.SMALLEST ? 1.3 : 1.6);\n\nconst getFontWeight = ({ weight }) =>\n  ({\n    [WEIGHT.NORMAL]: 400,\n    [WEIGHT.MEDIUM]: 500,\n    [WEIGHT.BOLD]: 700,\n    [WEIGHT.EXTRABOLD]: 800\n  }[weight]);\n\nconst getColor = ({ color }) =>\n  ({\n    gray: \"#828282\",\n    darkGray: \"#4A4A4A\",\n    veryDarkGray: \"#303030\",\n    black: \"#000\"\n  }[color]);\n\nconst StyledText = styled(({ element: Component, className, children }) => (\n  <Component className={className}>{children}</Component>\n))`\n  text-align: ${getTextAlign};\n  font-size: ${getSize};\n  line-height: ${getLineHeight};\n  color: ${getColor};\n  margin-bottom: ${({ spaceAfter }) => spaceAfter}px;\n  margin-top: ${({ spaceBefore }) => spaceBefore}px;\n  font-weight: ${getFontWeight};\n`;\n\nconst Text = ({\n  element = ELEMENT.P,\n  className,\n  children,\n  color,\n  size = SIZE.NORMAL,\n  weight = WEIGHT.NORMAL,\n  align,\n  uppercase = false,\n  italic = false,\n  spaceBefore = 0,\n  spaceAfter = 0\n}) => (\n  <StyledText\n    element={element}\n    align={align}\n    className={className}\n    color={color}\n    size={size}\n    weight={weight}\n    italic={italic}\n    uppercase={uppercase}\n    spaceBefore={spaceBefore}\n    spaceAfter={spaceAfter}\n  >\n    {children}\n  </StyledText>\n);\n\nText.propTypes = {\n  element: PropTypes.oneOf([ELEMENT.DIV, ELEMENT.P, ELEMENT.SPAN]),\n  size: PropTypes.oneOf([\n    SIZE.SMALLEST,\n    SIZE.SMALL,\n    SIZE.NORMAL,\n    SIZE.LARGE,\n    SIZE.LARGER,\n    SIZE.LARGEST\n  ])\n};\n\nexport default Text;\n"]},"metadata":{},"sourceType":"module"}