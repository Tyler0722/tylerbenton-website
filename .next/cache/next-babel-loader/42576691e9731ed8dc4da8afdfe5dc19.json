{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Badge } from \"components\";\nvar Project = styled.li.withConfig({\n  displayName: \"Projects__Project\",\n  componentId: \"sc-1ntx9q-0\"\n})([\"position:relative;.badge{position:absolute;right:8px;top:8px;}\"]);\n\nvar Projects = function Projects(_ref) {\n  var _ref$projects = _ref.projects,\n      projects = _ref$projects === void 0 ? [] : _ref$projects;\n\n  var renderBadge = function renderBadge(url) {\n    var isVideo = url.includes(\".mp4\");\n\n    if (isVideo) {\n      return __jsx(Badge, {\n        className: \"badge\"\n      }, \"gif\");\n    } else {\n      return null;\n    }\n  };\n\n  var renderVideoOrPicture = function renderVideoOrPicture(url) {\n    var isVideo = url.includes(\".mp4\");\n    var Element = isVideo ? \"video\" : \"picture\";\n    var mimeType = isVideo ? \"video/mp4\" : \"image/png\";\n    var videoProps = isVideo ? {\n      autoPlay: true,\n      loop: true,\n      muted: true,\n      playsInline: true\n    } : null;\n    var style = {\n      width: \"100%\"\n    };\n    return isVideo ? __jsx(Element, _extends({}, videoProps, {\n      style: style\n    }), __jsx(\"source\", {\n      src: url,\n      type: mimeType\n    })) : __jsx(\"img\", {\n      style: style,\n      src: url,\n      alt: \"\"\n    });\n  };\n\n  return __jsx(Grid, null, projects.map(function (_ref2, index) {\n    var name = _ref2.name,\n        liveVersionUrl = _ref2.liveVersionUrl,\n        thumb = _ref2.thumb;\n    return __jsx(Project, {\n      key: index\n    }, __jsx(\"a\", {\n      href: liveVersionUrl,\n      style: {\n        display: \"block\"\n      }\n    }, renderBadge(thumb), renderVideoOrPicture(thumb)));\n  }));\n};\n\nexport default Projects;","map":null,"metadata":{},"sourceType":"module"}