{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled, { css } from \"styled-components\";\nimport { TYPE, ELEMENT } from \"./constants\";\n/*\n  /12  title6\n  /24  title5\n  32  title4\n  42  title3\n  /56  title2\n  70  title1\n  /100 display (1)\n*/\n\nconst getFontSize = ({\n  type\n}) => ({\n  [TYPE.DISPLAY]: \"8rem\",\n  [TYPE.TITLE1]: \"7rem\",\n  [TYPE.TITLE2]: \"5.6rem\",\n  [TYPE.TITLE3]: \"4.2rem\",\n  [TYPE.TITLE4]: \"3.2rem\",\n  [TYPE.TITLE5]: \"2.4rem\",\n  [TYPE.TITLE6]: \"1.2rem\"\n})[type];\n\nconst getLineHeight = ({\n  type\n}) => ({\n  [TYPE.DISPLAY]: 1,\n  [TYPE.TITLE1]: 1,\n  [TYPE.TITLE2]: 1.3,\n  [TYPE.TITLE3]: 1,\n  [TYPE.TITLE4]: 1,\n  [TYPE.TITLE5]: 1.3,\n  [TYPE.TITLE6]: 1\n})[type];\n\nconst getFontWeight = ({\n  type\n}) => type === TYPE.TITLE6 ? 500 : 700;\n\nconst StyledHeading = styled(({\n  element: Component,\n  className,\n  children\n}) => __jsx(Component, {\n  className: className\n}, children)).withConfig({\n  displayName: \"Heading__StyledHeading\",\n  componentId: \"kdol8h-0\"\n})([\"color:\", \";font-size:\", \";line-height:\", \";text-transform:\", \";letter-spacing:\", \";font-weight:\", \";margin-bottom:\", \"px;\"], ({\n  color\n}) => color || \"inherit\", getFontSize, getLineHeight, ({\n  type\n}) => type === TYPE.TITLE6 ? \"uppercase\" : null, ({\n  type\n}) => type === TYPE.TITLE6 ? \"1px\" : 0, getFontWeight, ({\n  spaceAfter\n}) => spaceAfter);\n\nconst Heading = ({\n  spaceAfter = 0,\n  children,\n  color,\n  element = ELEMENT.DIV,\n  type = TYPE.TITLE1\n}) => __jsx(StyledHeading, {\n  spaceAfter: spaceAfter,\n  color: color,\n  element: element,\n  type: type\n}, children);\n\nexport default Heading;","map":{"version":3,"sources":["/home/tyler/Documents/tylerbenton/components/Heading/index.js"],"names":["React","PropTypes","styled","css","TYPE","ELEMENT","getFontSize","type","DISPLAY","TITLE1","TITLE2","TITLE3","TITLE4","TITLE5","TITLE6","getLineHeight","getFontWeight","StyledHeading","element","Component","className","children","color","spaceAfter","Heading","DIV"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,SAASC,IAAT,EAAeC,OAAf,QAA8B,aAA9B;AAEA;;;;;;;;;;AAUA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACjB;AACC,GAACH,IAAI,CAACI,OAAN,GAAgB,MADjB;AAEC,GAACJ,IAAI,CAACK,MAAN,GAAe,MAFhB;AAGC,GAACL,IAAI,CAACM,MAAN,GAAe,QAHhB;AAIC,GAACN,IAAI,CAACO,MAAN,GAAe,QAJhB;AAKC,GAACP,IAAI,CAACQ,MAAN,GAAe,QALhB;AAMC,GAACR,IAAI,CAACS,MAAN,GAAe,QANhB;AAOC,GAACT,IAAI,CAACU,MAAN,GAAe;AAPhB,GAQCP,IARD,CADH;;AAWA,MAAMQ,aAAa,GAAG,CAAC;AAAER,EAAAA;AAAF,CAAD,KACnB;AACC,GAACH,IAAI,CAACI,OAAN,GAAgB,CADjB;AAEC,GAACJ,IAAI,CAACK,MAAN,GAAe,CAFhB;AAGC,GAACL,IAAI,CAACM,MAAN,GAAe,GAHhB;AAIC,GAACN,IAAI,CAACO,MAAN,GAAe,CAJhB;AAKC,GAACP,IAAI,CAACQ,MAAN,GAAe,CALhB;AAMC,GAACR,IAAI,CAACS,MAAN,GAAe,GANhB;AAOC,GAACT,IAAI,CAACU,MAAN,GAAe;AAPhB,GAQCP,IARD,CADH;;AAWA,MAAMS,aAAa,GAAG,CAAC;AAAET,EAAAA;AAAF,CAAD,KAAeA,IAAI,KAAKH,IAAI,CAACU,MAAd,GAAuB,GAAvB,GAA6B,GAAlE;;AAEA,MAAMG,aAAa,GAAGf,MAAM,CAAC,CAAC;AAAEgB,EAAAA,OAAO,EAAEC,SAAX;AAAsBC,EAAAA,SAAtB;AAAiCC,EAAAA;AAAjC,CAAD,KAC3B,MAAC,SAAD;AAAW,EAAA,SAAS,EAAED;AAAtB,GAAkCC,QAAlC,CAD0B,CAAT;AAAA;AAAA;AAAA,kIAGR,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,IAAI,SAHhB,EAIJhB,WAJI,EAKFS,aALE,EAMC,CAAC;AAAER,EAAAA;AAAF,CAAD,KAAeA,IAAI,KAAKH,IAAI,CAACU,MAAd,GAAuB,WAAvB,GAAqC,IANrD,EAOC,CAAC;AAAEP,EAAAA;AAAF,CAAD,KAAeA,IAAI,KAAKH,IAAI,CAACU,MAAd,GAAuB,KAAvB,GAA+B,CAP/C,EAQFE,aARE,EASA,CAAC;AAAEO,EAAAA;AAAF,CAAD,KAAoBA,UATpB,CAAnB;;AAYA,MAAMC,OAAO,GAAG,CAAC;AACfD,EAAAA,UAAU,GAAG,CADE;AAEfF,EAAAA,QAFe;AAGfC,EAAAA,KAHe;AAIfJ,EAAAA,OAAO,GAAGb,OAAO,CAACoB,GAJH;AAKflB,EAAAA,IAAI,GAAGH,IAAI,CAACK;AALG,CAAD,KAOd,MAAC,aAAD;AACE,EAAA,UAAU,EAAEc,UADd;AAEE,EAAA,KAAK,EAAED,KAFT;AAGE,EAAA,OAAO,EAAEJ,OAHX;AAIE,EAAA,IAAI,EAAEX;AAJR,GAMGc,QANH,CAPF;;AAiBA,eAAeG,OAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled, { css } from \"styled-components\";\n\nimport { TYPE, ELEMENT } from \"./constants\";\n\n/*\n  /12  title6\n  /24  title5\n  32  title4\n  42  title3\n  /56  title2\n  70  title1\n  /100 display (1)\n*/\n\nconst getFontSize = ({ type }) =>\n  ({\n    [TYPE.DISPLAY]: \"8rem\",\n    [TYPE.TITLE1]: \"7rem\",\n    [TYPE.TITLE2]: \"5.6rem\",\n    [TYPE.TITLE3]: \"4.2rem\",\n    [TYPE.TITLE4]: \"3.2rem\",\n    [TYPE.TITLE5]: \"2.4rem\",\n    [TYPE.TITLE6]: \"1.2rem\"\n  }[type]);\n\nconst getLineHeight = ({ type }) =>\n  ({\n    [TYPE.DISPLAY]: 1,\n    [TYPE.TITLE1]: 1,\n    [TYPE.TITLE2]: 1.3,\n    [TYPE.TITLE3]: 1,\n    [TYPE.TITLE4]: 1,\n    [TYPE.TITLE5]: 1.3,\n    [TYPE.TITLE6]: 1\n  }[type]);\n\nconst getFontWeight = ({ type }) => (type === TYPE.TITLE6 ? 500 : 700);\n\nconst StyledHeading = styled(({ element: Component, className, children }) => (\n  <Component className={className}>{children}</Component>\n))`\n  color: ${({ color }) => color || \"inherit\"};\n  font-size: ${getFontSize};\n  line-height: ${getLineHeight};\n  text-transform: ${({ type }) => (type === TYPE.TITLE6 ? \"uppercase\" : null)};\n  letter-spacing: ${({ type }) => (type === TYPE.TITLE6 ? \"1px\" : 0)};\n  font-weight: ${getFontWeight};\n  margin-bottom: ${({ spaceAfter }) => spaceAfter}px;\n`;\n\nconst Heading = ({\n  spaceAfter = 0,\n  children,\n  color,\n  element = ELEMENT.DIV,\n  type = TYPE.TITLE1\n}) => (\n  <StyledHeading\n    spaceAfter={spaceAfter}\n    color={color}\n    element={element}\n    type={type}\n  >\n    {children}\n  </StyledHeading>\n);\n\nexport default Heading;\n"]},"metadata":{},"sourceType":"module"}